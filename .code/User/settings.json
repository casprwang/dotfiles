{
  // Place your settings in this file to overwrite the default settings
  "vim.enableNeovim": true,
  "vim.neovimPath": "/usr/local/bin/nvim",
  // "files.autoSave": "off",
  "files.associations": {
    "*.ml": "ocaml",
    "*.mli": "ocaml"
  },
  "git.confirmSync": false,
  "editor.tabSize": 2,
  "emmet.syntaxProfiles": {
    "javascript": [
      "html",
      "jsx"
    ]
  },
  // "typescript.check.tscVersion": false,
  // "amVim.bindCtrlCommands": false,
  // "editor.cursorStyle": "block",
  "editor.fontSize": 13,
  "vim.leader": "<space>",
  "vim.statusBarColorControl": true,
  "vim.scroll": 5,
  "vim.useSystemClipboard": true,
  "vim.hlsearch": true,
  "vim.easymotion": false,
  "vim.easymotionMarkerFontSize": 19,
  "vim.easymotionMarkerForegroundColorOneChar": "red",
  "vim.easymotionMarkerBackgroundColor": "black",
  "vim.easymotionMarkerHeight": 22,
  "workbench.editor.enablePreview": false,
  "vim.easymotionMarkerYOffset": 5,
  "editor.lineNumbers": "off",
  // "terminal.integrated.cursorBlinking": false,
  // "editor.cursorBlinking": "solid",
  "vim.insertModeKeyBindings": [
    {
      "before": [
        "<c-o>"
      ],
      "after": [],
      "commands": [
        {
          "command": "insert Snippet",
          "args": []
        }
      ]
    },
    {
      "before": [
        "<c-m>"
      ],
      "after": [
        "<Esc>",
        "o"
      ]
    },
    {
      "before": [
        "<C-g>"
      ],
      "after": [
        "cmd",
        "4"
      ],
      "commands": [
        {
          "command": "editor.emmet.action.expandAbbreviation",
          "args": []
        }
      ]
    },
    {
      "before": [
        "<c-a>"
      ],
      "after": [],
      "commands": [
        {
          "command": "cursorLineStart",
          "args": []
        }
      ]
    },
    {
      "before": [
        "<c-e>"
      ],
      "after": [],
      "commands": [
        {
          "command": "cursorLineEnd"
        }
      ]
    }
  ],
  "vim.visualModeKeyBindings": [
    {
      "before": [
        "K"
      ],
      "after": [
        "5",
        "g",
        "k"
      ]
    },
    {
      "before": [
        "J"
      ],
      "after": [
        "5",
        "g",
        "j"
      ]
    },
  ],
  "vim.normalModeKeyBindings": [
    {
      "before": [
        "\n"
      ],
      "after": [
        "o",
        "<Esc>"
      ]
    },
    {
      "before": [
        "j",
        "j"
      ],
      "after": [
        "cmd",
        "s"
      ]
    },
    {
      "before": [
        "<right>"
      ],
      "after": [],
      "commands": [
        {
          "command": "workbench.action.focusNextGroup",
          "args": []
        }
      ]
    },
    {
      "before": [
        "<left>"
      ],
      "after": [],
      "commands": [
        {
          "command": "workbench.action.focusPreviousGroup",
          "args": []
        }
      ]
    },
    {
      "before": [
        "<C-n>"
      ],
      "after": [],
      "commands": [
        {
          "command": ":nohl",
          "args": []
        }
      ]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": [
        "Z",
        "Z"
      ],
      "after": [],
      "commands": [
        {
          "command": "workbench.action.closeActiveEditor",
          "args": []
        }
      ]
    },
    {
      "before": [
        "leader",
        "f"
      ],
      "after": [],
      "commands": [
        {
          "command": "editor.action.formatDocument",
          "args": []
        }
      ]
    },
    {
      "before": [
        "leader",
        "o"
      ],
      "after": [],
      "commands": [
        {
          "command": "toggleSideBarVisibility",
          "args": []
        }
      ]
    },
    {
      "before": [
        "leader",
        "j"
      ],
      "after": [],
      "commands": [
        {
          "command": "workbench.action.files.save",
          "args": []
        }
      ]
    },
    {
      "before": [
        "g",
        "/"
      ],
      "after": [
        "g",
        "c"
      ]
    },
    {
      "before": [
        "K"
      ],
      "after": [
        "5",
        "g",
        "k"
      ]
    },
    {
      "before": [
        "J"
      ],
      "after": [
        "5",
        "g",
        "j"
      ]
    },
    {
      "before": [
        "<space>",
        "m"
      ],
      "after": [],
      "commands": [
        {
          "command": "git.stage",
          "args": []
        },
        {
          "command": "git.commit",
          "args": []
        }
      ]
    },
    {
      "before": [
        "g",
        "/",
        "/"
      ],
      "after": [],
      "commands": [
        {
          "command": "editor.action.commentLine",
          "args": []
        }
      ]
    },
    {
      "before": [
        "<Esc>"
      ],
      "after": [
        "<Esc>"
      ],
      "commands": [
        {
          "command": ":nohl",
          "args": []
        }
      ]
    }
  ],
  // "vim.disableAnnoyingNeovimMessage": true,
  "guides.enabled": false,
  "editor.multiCursorModifier": "ctrlCmd",
  "window.zoomLevel": 0,
  // "prettier.jsxBracketSameLine": false,
  // "prettier.semi": false,
  // "prettier.useTabs": false,
  // "prettier.singleQuote": false,
  "emmet.triggerExpansionOnTab": false,
  "workbench.sideBar.location": "right",
  "editor.cursorStyle": "line",
  "editor.cursorBlinking": "solid",
  "go.formatTool": "gofmt",
  "[go]": {
    "editor.tabSize": 8,
    "editor.insertSpaces": true
  },
  "[javascript]": {
    "editor.tabSize": 2
  },
  // "prettier.tabWidth": 2,
  // "prettier.printWidth": 80,
  // "go.formatOnSave": false,
  "vim.foldfix": true,
  "workbench.colorTheme": "Nord",
  "todohighlight.isEnable": false,
  "go.gopath": "/Users/song/gocode",
  "code-runner.executorMap": {
    "javascript": "node",
    "java": "cd $dir && javac $fileName && java $fileNameWithoutExt",
    "c": "cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "cpp": "cd $dir && g++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "objective-c": "cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "php": "php",
    "python": "python",
    "perl": "perl",
    "ruby": "ruby",
    "go": "go run",
    "lua": "lua-5.1",
    "groovy": "groovy",
    "powershell": "powershell -ExecutionPolicy ByPass -File",
    "bat": "cmd /c",
    "shellscript": "bash",
    "fsharp": "fsi",
    "csharp": "scriptcs",
    "vbscript": "cscript //Nologo",
    "typescript": "ts-node",
    "coffeescript": "coffee",
    "scala": "scala",
    "swift": "swift",
    "julia": "julia",
    "crystal": "crystal",
    "ocaml": "ocaml",
    "r": "Rscript",
    "applescript": "osascript",
    "clojure": "lein exec",
    "haxe": "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",
    "rust": "cd $dir && rustc $fileName && $dir$fileNameWithoutExt",
    "racket": "racket",
    "ahk": "autohotkey",
    "autoit": "autoit3",
    "dart": "dart",
    "pascal": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
    "d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",
    "haskell": "runhaskell",
    "nim": "nim compile --verbosity:0 --hints:off --run"
  },
  "editor.snippetSuggestions": "inline",
  "eslint.autoFixOnSave": false,
  "eslint.options": {},
  "eslint.packageManager": "yarn",
  "editor.minimap.enabled": false,
  "editor.tabCompletion": false,
  "git.enableSmartCommit": true,
  "git.decorations.enabled": false,
  "eslint.validate": [
    "javascript",
    // "javascriptreact",
    "html",
    "vue",
    {
      "language": "vue",
      "autoFix": false
    },
  ],
  "python.linting.enabled": false,
  "[python]": {
    "editor.insertSpaces": true,
    "editor.tabSize": 4,
    "editor.autoIndent": false
  },
  "python.formatting.yapfPath": "/usr/local/bin/yapf",
  "eslint.workingDirectories": [],
  "workbench.iconTheme": "eq-material-theme-icons",
  "prettier.eslintIntegration": true,
  "vetur.format.defaultFormatter.js": "vscode-typescript",
  "vetur.format.defaultFormatter.html": "js-beautify-html",
  "vetur.format.defaultFormatter.ts": "vscode-typescript"
}