{
  "_args": [
    [
      {
        "raw": "markdown-it-math@https://github.com/Galadirith/markdown-it-math/tarball/fix-table-pipe-parse-no-ascii",
        "scope": null,
        "escapedName": "markdown-it-math",
        "name": "markdown-it-math",
        "rawSpec": "https://github.com/Galadirith/markdown-it-math/tarball/fix-table-pipe-parse-no-ascii",
        "spec": "https://github.com/Galadirith/markdown-it-math/tarball/fix-table-pipe-parse-no-ascii",
        "type": "remote"
      },
      "/private/var/folders/86/4m73wmd91gn4xdp7wy3rbjvh0000gn/T/d-116103-88380-1gcfo3o/package.tgz"
    ]
  ],
  "_from": "https://github.com/Galadirith/markdown-it-math/tarball/fix-table-pipe-parse-no-ascii",
  "_id": "markdown-it-math@3.0.2",
  "_inCache": true,
  "_installable": true,
  "_location": "/markdown-preview-plus/markdown-it-math",
  "_phantomChildren": {},
  "_requested": {
    "raw": "markdown-it-math@https://github.com/Galadirith/markdown-it-math/tarball/fix-table-pipe-parse-no-ascii",
    "scope": null,
    "escapedName": "markdown-it-math",
    "name": "markdown-it-math",
    "rawSpec": "https://github.com/Galadirith/markdown-it-math/tarball/fix-table-pipe-parse-no-ascii",
    "spec": "https://github.com/Galadirith/markdown-it-math/tarball/fix-table-pipe-parse-no-ascii",
    "type": "remote"
  },
  "_requiredBy": [
    "/markdown-preview-plus"
  ],
  "_resolved": "https://github.com/Galadirith/markdown-it-math/tarball/fix-table-pipe-parse-no-ascii",
  "_shasum": "e7eae4377e116d09e8ddb243e3fc92654e48ad5f",
  "_shrinkwrap": null,
  "_spec": "markdown-it-math@https://github.com/Galadirith/markdown-it-math/tarball/fix-table-pipe-parse-no-ascii",
  "_where": "/private/var/folders/86/4m73wmd91gn4xdp7wy3rbjvh0000gn/T/d-116103-88380-1gcfo3o/package.tgz",
  "author": {
    "name": "Rúnar Berg Baugsson Sigríðarson"
  },
  "bugs": {
    "url": "https://github.com/runarberg/markdown-it-math/issues"
  },
  "dependencies": {},
  "description": "Markdown-it plugin to include math in your document",
  "devDependencies": {
    "babelify": "^6.3.0",
    "browserify": "^11.1.0",
    "eslint": "^1.4.3",
    "markdown-it": "^5.1.0",
    "markdown-it-testgen": "^0.1.4",
    "mocha": "^2.3.2",
    "texzilla": "^0.9.9",
    "uglifyjs": "^2.4.10"
  },
  "directories": {
    "test": "test"
  },
  "homepage": "https://github.com/runarberg/markdown-it-math",
  "keywords": [
    "markdown-it",
    "markdown-it-plugin",
    "markdown",
    "MathML",
    "AsciiMath"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "markdown-it-math",
  "optionalDependencies": {},
  "readme": "markdown-it-math\n================\n\n[![npm](https://img.shields.io/npm/v/markdown-it-math.svg)](https://www.npmjs.com/package/markdown-it-math)\n[![Build Status](https://travis-ci.org/runarberg/markdown-it-math.svg?branch=master)](https://travis-ci.org/runarberg/markdown-it-math)\n\n```md\nPythagoran theorem is $$a^2 + b^2 = c^2$$.\n\nBayes theorem:\n\n$$$\nP(A | B) = (P(B | A)P(A)) / P(B)\n$$$\n```\n\n```html\n<p>Pythagoran theorem is <math><msup><mi>a</mi><mn>2</mn></msup><mo>+</mo><msup><mi>b</mi><mn>2</mn></msup><mo>=</mo><msup><mi>c</mi><mn>2</mn></msup></math>.</p>\n<p>Bayes theorem:</p>\n<math display=\"block\"><mi>P</mi><mfenced open=\"(\" close=\")\"><mrow><mi>A</mi><mo stretchy=\"true\" lspace=\"veryverythickmathspace\" rspace=\"veryverythickmathspace\">|</mo><mi>B</mi></mrow></mfenced><mo>=</mo><mfrac><mrow><mi>P</mi><mfenced open=\"(\" close=\")\"><mrow><mi>B</mi><mo stretchy=\"true\" lspace=\"veryverythickmathspace\" rspace=\"veryverythickmathspace\">|</mo><mi>A</mi></mrow></mfenced><mi>P</mi><mfenced open=\"(\" close=\")\"><mi>A</mi></mfenced></mrow><mrow><mi>P</mi><mfenced open=\"(\" close=\")\"><mi>B</mi></mfenced></mrow></mfrac></math>\n```\n\nInstallation\n------------\n\n```sh\nnpm install markdown-it-math --save\n```\n\nUsage\n-----\n\n```javascript\nvar md = require('markdown-it')()\n        .use(require('markdown-it-math') [, options]);\n```\n\nwhere options can be (with defaults)\n\n```javascript\nvar options = {\n    inlineOpen: '$$',\n    inlineClose: '$$',\n    blockOpen: '$$$',\n    blockClose: '$$$',\n    renderingOptions: {},\n    inlineRenderer: require('ascii2mathml')(this.rendererOptions),\n    blockRenderer: require('ascii2mathml')(Object.assign({ display: 'block' },\n                                                         this.renderingOptions))\n}\n```\n\n(See [ascii2mathml](http://runarberg.github.io/ascii2mathml/) for reference about the default renderer).\n\n\nExamples\n--------\n\nUsing comma as a decimal mark\n\n```javascript\nvar md = require('markdown-it')()\n        .use(require('markdown-it-math'), {\n            renderingOptions: { decimalMark: ',' }\n        });\n\nmd.render(\"$$40,2$$\");\n// <p><math><mn>40,2</mn></math></p>\n```\n\nUsing [TeXZilla](http://fred-wang.github.io/TeXZilla/) as renderer\n\n```javascript\nvar texzilla = require('texzilla');\nvar md = require('markdown-it')()\n        .use(require('markdown-it-math'), {\n            inlineRenderer: function(str) {\n                return texzilla.toMathMLString(str);\n            },\n            blockRenderer: function(str) {\n                return texzilla.toMathMLString(str, true);\n            }\n        });\n\nmd.render(\"$$\\\\sin(2\\\\pi)$$\");\n// <p><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo lspace=\"0em\" rspace=\"0em\">sin</mo><mo stretchy=\"false\">(</mo><mn>2</mn><mi>π</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"TeX\">\\sin(2\\pi)</annotation></semantics></math></p>\n```\n\nUsing LaTeX style delimiters\n\n```javascript\nvar md = require('markdown-it')()\n        .use(require('markdown-it-math'), {\n            inlineOpen: '\\\\(',\n            inlineClose: '\\\\)',\n            blockOpen: '\\\\[',\n            blockClose: '\\\\]'\n        })\n```\n\nNote there are restrictions on what inline delimiters you can use,\nbased on optimization for the markdown-it parser\n[see here for details][1]. And block level math must be on its own\nlines with newlines separating the math from the delimiters.\n\n```markdown\nSome text with inline math \\(a^2 + b^2 = c^2\\)\n\nAnd block math\n\n\\[\ne = sum_(n=0)^oo 1/n!\n\\]\n```\n\n[1]: https://github.com/markdown-it/markdown-it/blob/master/docs/development.md#why-my-inline-rule-is-not-executed\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/runarberg/markdown-it-math.git"
  },
  "scripts": {
    "browserify": "(echo \"/*! ${npm_package_name} ${npm_package_version} ${npm_package_homepage} @license MIT */\"; browserify ./ -s markdownitMath) > dist/markdown-it-math.js",
    "dist": "rm -fr dist; mkdir dist; npm run browserify; npm run minify",
    "lint": "eslint index.js lib/",
    "minify": "uglifyjs dist/markdown-it-math.js -b beautify=false,ascii-only=true -c -m --preamble \"/*! ${npm_package_name} ${npm_package_version} ${npm_package_homepage} @license MIT */\" > dist/markdown-it-math.min.js",
    "predist": "npm run test",
    "prepublish": "npm run dist",
    "pretest": "npm run lint",
    "test": "mocha"
  },
  "version": "3.0.2"
}
