{"version":3,"file":"option.js","sourceRoot":"","sources":["option.ts"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\n\nimport * as utils from \"./utils\";\n\n// jsdoc, see constructor.\nexport default class Option {\n    /** this option need parameter value. it is required. */\n    required: boolean;\n    /** this option need parameter value. it is optional. */\n    optional: boolean;\n    /** this option is default true. if specified this option, value is become false. */\n    no: boolean;\n    /** short style. e.g. -o */\n    short: string;\n    /** long style. e.g. --option */\n    long: string;\n    /** description of this option */\n    description: string;\n\n    /**\n     * class of option.\n     * ```\n     * cmd --path foo/bar buzz.txt\n     *       â†‘ this one!\n     * ```\n     * @param flags pass '-f, --foo'(boolean) or '--foo'(boolean) or '--foo <bar>'(string[]) or '--foo [bar]'(string[]).\n     * @param description\n     * @param defaultValue\n     * @class\n     */\n    constructor(public flags: string, description?: string, public defaultValue?: any) {\n        this.required = flags.indexOf(\"<\") !== -1;\n        this.optional = flags.indexOf(\"[\") !== -1;\n        this.no = flags.indexOf(\"-no-\") === -1;\n        let splittedFlags = flags.split(/[ ,|]+/);\n        if (splittedFlags.length > 1 && !/^[[<]/.test(splittedFlags[1])) {\n            this.short = splittedFlags.shift();\n        }\n        this.long = splittedFlags.shift();\n        this.description = description || \"\";\n        if (typeof this.defaultValue === \"undefined\") {\n            if (this.required || this.optional) {\n                this.defaultValue = \"\";\n            } else {\n                this.defaultValue = !this.no;\n            }\n        }\n    }\n\n    /**\n     * name of this option.\n     * @returns {any}\n     */\n    name() {\n        return this.long.replace(\"--\", \"\").replace(\"no-\", \"\");\n    }\n\n    /**\n     * check arg is matches this option.\n     * @param arg\n     * @returns {boolean}\n     */\n    is(arg: string) {\n        return arg === this.short || arg === this.long;\n    }\n\n    /**\n     * parse args.\n     * build to opts.\n     *\n     * e.g. #1\n     *   instance member:  required=true, optional=false, short=-f, long=--foo\n     *   method arguments: opts={}, args=[\"--foo\", \"foo!\", \"bar!\"].\n     *   opts are modified to { foo: [\"foo!\"] } and return [\"bar!\"].\n     *\n     * e.g. #2\n     *   instance member:  required=true, optional=false, short=-f, long=--foo\n     *   method arguments: opts={ foo: [\"foo?\"] }, args=[\"--foo\", \"foo!\", \"bar!\"].\n     *   opts are modified to { foo: [\"foo?\", \"foo!\"] } and return [\"bar!\"].\n     *\n     * e.g. #3\n     *   instance member:  required=false, optional=false, short=-f, long=--foo\n     *   method arguments: opts={}, args=[\"-f\", \"foo!\", \"bar!\"].\n     *   opts are modified to { foo: true } and return [\"foo!\", \"bar!\"].\n     *\n     * @param opts\n     * @param args\n     * @returns {string[]}\n     */\n    parse(opts: any, args: string[]): string[] {\n        if (!this.is(args[0])) {\n            throw new Error(args[0] + \" is not match \" + this.short + \" or \" + this.long);\n        }\n        let next = args[1];\n        let propertyName = utils.chainToLowerCamelCase(this.name());\n        if (this.required) {\n            if (next == null) {\n                throw new Error(args[0] + \" is required parameter value\");\n            }\n            opts[propertyName] = opts[propertyName] || [];\n            opts[propertyName].push(next);\n            return args.slice(2);\n        } else if (this.optional) {\n            if (next != null && !/^-/.test(next)) {\n                opts[propertyName] = opts[propertyName] || [];\n                opts[propertyName].push(next);\n                return args.slice(2);\n            } else {\n                opts[propertyName] = opts[propertyName] || [];\n                opts[propertyName].push(this.defaultValue);\n                return args.slice(1);\n            }\n        } else {\n            opts[propertyName] = this.no ? true : false;\n            return args.slice(1);\n        }\n    }\n}\n"]}