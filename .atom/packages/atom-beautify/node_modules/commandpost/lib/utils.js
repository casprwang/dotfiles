"use strict";
/**
 * calc max length of strs.
 * @param strs
 * @returns {number}
 * @private
 */
function maxLength(strs) {
    "use strict";
    return strs.map(function (str) { return str.length; }).reduce(function (p, c) { return Math.max(p, c); }, 0);
}
exports.maxLength = maxLength;
/**
 * padding string with pad.
 * @param str
 * @param length
 * @param pad
 * @returns {string}
 * @private
 */
function pad(str, length, pad) {
    "use strict";
    if (pad === void 0) { pad = " "; }
    if (length <= str.length) {
        return str;
    }
    if (pad === "") {
        throw new Error("pad can't to be empty string");
    }
    while (str.length < length) {
        str += pad;
    }
    return str;
}
exports.pad = pad;
/**
 * convert foo-bar to fooBar.
 * @param str
 * @returns {string}
 * @private
 */
function chainToLowerCamelCase(str) {
    "use strict";
    var nextCamel = false;
    return str
        .split("")
        .map(function (char) {
        if (char === "-") {
            nextCamel = true;
            return "";
        }
        else if (nextCamel) {
            nextCamel = false;
            return char.toUpperCase();
        }
        else {
            return char;
        }
    })
        .join("");
}
exports.chainToLowerCamelCase = chainToLowerCamelCase;
//# sourceMappingURL=utils.js.map