{"version":3,"sources":["../../../src/elements/types/ObjectExpression.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqB,gB;;;AACjB,8BAAY,UAAZ,EAAwB;AAAA;AAAA,yHACd,kBADc,EACM,UADN;AAEvB;;;;wCAEe,Q,EAAU;AACtB,gBAAI,aAAa,EAAjB;;AAEA,qBAAS,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACA,qBAAS,WAAT;;AAEA,mBAAO,CAAC,SAAS,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAR,EAA6C;AACzC,oBAAI,SAAS,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrC,6BAAS,QAAT;AACA,6BAAS,WAAT;AACA,6BAAS,WAAT,CAAqB,YAArB,EAAmC,GAAnC;AACH,iBAJD,MAIO;AACH,wBAAI,SAAS,MAAT,CAAgB,gBAAhB,CAAJ,EAAuC;AACnC,mCAAW,IAAX,CAAgB,SAAS,QAAT,CAAkB,gBAAlB,CAAhB;AACH,qBAFD,MAEO,IAAI,SAAS,MAAT,CAAgB,gBAAhB,CAAJ,EAAuC;AAC1C,mCAAW,IAAX,CAAgB,SAAS,QAAT,CAAkB,gBAAlB,CAAhB;AACH,qBAFM,MAEA;AACH,mCAAW,IAAX,CAAgB,SAAS,QAAT,CAAkB,cAAlB,CAAhB;AACH;AACD,6BAAS,WAAT;AACA,wBAAI,SAAS,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrC,iCAAS,QAAT;AACA,iCAAS,WAAT;AACH;AACJ;AACJ;;AAED,qBAAS,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACA,qBAAS,SAAT;;AAEA,iBAAK,UAAL,GAAkB,UAAlB;AACH;;;;;kBApCgB,gB","file":"ObjectExpression.js","sourcesContent":["import Expression from '../Expression';\n\nexport default class ObjectExpression extends Expression {\n    constructor(childNodes) {\n        super('ObjectExpression', childNodes);\n    }\n\n    _acceptChildren(children) {\n        let properties = [];\n\n        children.passToken('Punctuator', '{');\n        children.skipNonCode();\n\n        while (!children.isToken('Punctuator', '}')) {\n            if (children.isToken('Punctuator', ',')) {\n                children.moveNext();\n                children.skipNonCode();\n                children.assertToken('Punctuator', '}');\n            } else {\n                if (children.isNode('SpreadProperty')) {\n                    properties.push(children.passNode('SpreadProperty'));\n                } else if (children.isNode('ObjectProperty')) {\n                    properties.push(children.passNode('ObjectProperty'));\n                } else {\n                    properties.push(children.passNode('ObjectMethod'));\n                }\n                children.skipNonCode();\n                if (children.isToken('Punctuator', ',')) {\n                    children.moveNext();\n                    children.skipNonCode();\n                }\n            }\n        }\n\n        children.passToken('Punctuator', '}');\n        children.assertEnd();\n\n        this.properties = properties;\n    }\n}\n"]}