{"version":3,"sources":["../../../src/elements/types/ImportSpecifier.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;IAIqB,e;;;AACjB,6BAAY,UAAZ,EAAwB;AAAA;AAAA,wHACd,iBADc,EACK,UADL;AAEvB;;;;wCAEe,Q,EAAU;AACtB,gBAAI,cAAJ;AACA,gBAAI,WAAW,SAAS,QAAT,CAAkB,YAAlB,CAAf;;AAEA,gBAAI,CAAC,SAAS,KAAd,EAAqB;AACjB,yBAAS,WAAT;AACA,yBAAS,SAAT,CAAmB,YAAnB,EAAiC,IAAjC;AACA,yBAAS,WAAT;AACA,wBAAQ,SAAS,QAAT,CAAkB,YAAlB,CAAR;AACH,aALD,MAKO;AACH,wBAAQ,QAAR;AACH;;AAED,qBAAS,SAAT;;AAEA,iBAAK,KAAL,GAAa,KAAb;AACA,iBAAK,QAAL,GAAgB,QAAhB;AACH;;;;;kBAtBgB,e","file":"ImportSpecifier.js","sourcesContent":["import ModuleSpecifier from '../ModuleSpecifier';\n\n// tests are in ImportDeclaration\n\nexport default class ImportSpecifier extends ModuleSpecifier {\n    constructor(childNodes) {\n        super('ImportSpecifier', childNodes);\n    }\n\n    _acceptChildren(children) {\n        let local;\n        let imported = children.passNode('Identifier');\n\n        if (!children.isEnd) {\n            children.skipNonCode();\n            children.passToken('Identifier', 'as');\n            children.skipNonCode();\n            local = children.passNode('Identifier');\n        } else {\n            local = imported;\n        }\n\n        children.assertEnd();\n\n        this.local = local;\n        this.imported = imported;\n    }\n}\n"]}