'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _Statement2 = require('../Statement');

var _Statement3 = _interopRequireDefault(_Statement2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var validKinds = {
    var: true,
    let: true,
    const: true
};

var VariableDeclaration = function (_Statement) {
    (0, _inherits3.default)(VariableDeclaration, _Statement);


    // TODO: Can only have 1 declarator inside for ... in.

    function VariableDeclaration(childNodes) {
        (0, _classCallCheck3.default)(this, VariableDeclaration);
        return (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(VariableDeclaration).call(this, 'VariableDeclaration', childNodes));
    }

    (0, _createClass3.default)(VariableDeclaration, [{
        key: '_acceptChildren',
        value: function _acceptChildren(children) {
            var kind = children.passToken('Keyword', validKinds).value;
            children.skipNonCode();

            var declarations = [];

            declarations.push(children.passNode('VariableDeclarator'));
            children.skipNonCode();

            while (children.isToken('Punctuator', ',')) {
                children.passToken();
                children.skipNonCode();
                declarations.push(children.passNode('VariableDeclarator'));
                children.skipNonCode();
            }

            children.skipSemicolon();
            children.assertEnd();

            this.kind = kind;
            this.declarations = declarations;
        }
    }]);
    return VariableDeclaration;
}(_Statement3.default);

exports.default = VariableDeclaration;
//# sourceMappingURL=VariableDeclaration.js.map