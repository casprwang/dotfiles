{"version":3,"sources":["../../../src/elements/types/AssignmentPattern.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqB,iB;;;AACjB,+BAAY,UAAZ,EAAwB;AAAA;;AAAA,+HACd,mBADc,EACO,UADP;;AAEpB,cAAK,SAAL,GAAiB,IAAjB;AAFoB;AAGvB;;;;wCAEe,Q,EAAU;;AAEtB,gBAAI,OAAO,SAAS,WAAT,EAAX;AACA,qBAAS,WAAT;AACA,qBAAS,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACA,qBAAS,WAAT;AACA,gBAAI,QAAQ,SAAS,cAAT,EAAZ;AACA,qBAAS,SAAT;;AAEA,iBAAK,IAAL,GAAY,IAAZ;AACA,iBAAK,KAAL,GAAa,KAAb;AACH;;;;;kBAjBgB,iB","file":"AssignmentPattern.js","sourcesContent":["import Node from '../Node';\n\nexport default class AssignmentPattern extends Node {\n    constructor(childNodes) {\n        super('AssignmentPattern', childNodes);\n        this.isPattern = true;\n    }\n\n    _acceptChildren(children) {\n\n        let left = children.passPattern();\n        children.skipNonCode();\n        children.passToken('Punctuator', '=');\n        children.skipNonCode();\n        let right = children.passExpression();\n        children.assertEnd();\n\n        this.left = left;\n        this.right = right;\n    }\n}\n"]}