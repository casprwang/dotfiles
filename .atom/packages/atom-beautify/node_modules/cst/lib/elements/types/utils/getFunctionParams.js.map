{"version":3,"sources":["../../../../src/elements/types/utils/getFunctionParams.js"],"names":[],"mappings":";;;;;kBAWwB,iB;;;;;;;;;AAAT,SAAS,iBAAT,CAA2B,QAA3B,EAAoE;AAC/E,QAAI,SAAS,EAAb;AACA,aAAS,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACA,aAAS,WAAT;AACA,WAAO,CAAC,SAAS,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAR,EAA6C;AACzC,YAAI,SAAS,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrC,qBAAS,QAAT;AACA,qBAAS,WAAT;AACA,qBAAS,WAAT,CAAqB,YAArB,EAAmC,GAAnC;AACH,SAJD,MAIO;AACH,mBAAO,IAAP,CAAY,SAAS,WAAT,EAAZ;AACA,qBAAS,WAAT;AACA,gBAAI,SAAS,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrC,yBAAS,QAAT;AACA,yBAAS,WAAT;AACH;AACJ;AACJ;AACD,aAAS,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACA,WAAO,MAAP;AACH","file":"getFunctionParams.js","sourcesContent":["/* @flow */\n\nimport type ElementAssert from '../../ElementAssert';\nimport type Element from '../../Element';\n\n/**\n * Processes function parameters.\n *\n * @param {ElementAssert} children\n * @returns {Pattern[]}\n */\nexport default function getFunctionParams(children: ElementAssert): Array<Element> {\n    let params = [];\n    children.passToken('Punctuator', '(');\n    children.skipNonCode();\n    while (!children.isToken('Punctuator', ')')) {\n        if (children.isToken('Punctuator', ',')) {\n            children.moveNext();\n            children.skipNonCode();\n            children.assertToken('Punctuator', ')');\n        } else {\n            params.push(children.passPattern());\n            children.skipNonCode();\n            if (children.isToken('Punctuator', ',')) {\n                children.moveNext();\n                children.skipNonCode();\n            }\n        }\n    }\n    children.passToken('Punctuator', ')');\n    return params;\n}\n"]}