{"version":3,"sources":["../../../src/elements/types/ArrayExpression.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;IAKqB,e;;;AACjB,6BAAY,UAAZ,EAAwB;AAAA;AAAA,wHACd,iBADc,EACK,UADL;AAEvB;;;;wCAEe,Q,EAAU;AACtB,gBAAI,WAAW,EAAf;AACA,qBAAS,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACA,qBAAS,WAAT;AACA,mBAAO,CAAC,SAAS,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAR,EAA6C;AACzC,oBAAI,SAAS,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrC,6BAAS,IAAT,CAAc,IAAd;AACA,6BAAS,QAAT;AACA,6BAAS,WAAT;AACH,iBAJD,MAIO;AACH,6BAAS,IAAT,CAAc,SAAS,6BAAT,EAAd;AACA,6BAAS,WAAT;AACA,wBAAI,SAAS,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrC,iCAAS,QAAT;AACA,iCAAS,WAAT;AACH;AACJ;AACJ;AACD,qBAAS,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACA,qBAAS,SAAT;AACA,iBAAK,QAAL,GAAgB,QAAhB;AACH;;;;;kBA1BgB,e","file":"ArrayExpression.js","sourcesContent":["import Expression from '../Expression';\n\n/**\n * @name types.ArrayExpression\n */\nexport default class ArrayExpression extends Expression {\n    constructor(childNodes) {\n        super('ArrayExpression', childNodes);\n    }\n\n    _acceptChildren(children) {\n        let elements = [];\n        children.passToken('Punctuator', '[');\n        children.skipNonCode();\n        while (!children.isToken('Punctuator', ']')) {\n            if (children.isToken('Punctuator', ',')) {\n                elements.push(null);\n                children.moveNext();\n                children.skipNonCode();\n            } else {\n                elements.push(children.passExpressionOrSpreadElement());\n                children.skipNonCode();\n                if (children.isToken('Punctuator', ',')) {\n                    children.moveNext();\n                    children.skipNonCode();\n                }\n            }\n        }\n        children.passToken('Punctuator', ']');\n        children.assertEnd();\n        this.elements = elements;\n    }\n}\n"]}