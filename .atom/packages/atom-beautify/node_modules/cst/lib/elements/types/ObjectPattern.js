'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _Node2 = require('../Node');

var _Node3 = _interopRequireDefault(_Node2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ObjectPattern = function (_Node) {
    (0, _inherits3.default)(ObjectPattern, _Node);

    function ObjectPattern(childNodes) {
        (0, _classCallCheck3.default)(this, ObjectPattern);

        var _this = (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(ObjectPattern).call(this, 'ObjectPattern', childNodes));

        _this.isPattern = true;
        _this.isAssignable = true;
        return _this;
    }

    (0, _createClass3.default)(ObjectPattern, [{
        key: '_acceptChildren',
        value: function _acceptChildren(children) {
            var properties = [];
            children.passToken('Punctuator', '{');
            children.skipNonCode();
            while (!children.isToken('Punctuator', '}')) {
                if (children.isToken('Punctuator', ',')) {
                    children.moveNext();
                    children.skipNonCode();
                    children.assertToken('Punctuator', '}');
                } else {
                    if (children.isNode('RestProperty')) {
                        properties.push(children.passNode('RestProperty'));
                    } else {
                        properties.push(children.passNode('ObjectProperty'));
                    }
                    children.skipNonCode();
                    if (children.isToken('Punctuator', ',')) {
                        children.moveNext();
                        children.skipNonCode();
                    }
                }
            }
            children.passToken('Punctuator', '}');
            children.assertEnd();
            this.properties = properties;
        }
    }]);
    return ObjectPattern;
}(_Node3.default);

exports.default = ObjectPattern;
//# sourceMappingURL=ObjectPattern.js.map