'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _Expression2 = require('../Expression');

var _Expression3 = _interopRequireDefault(_Expression2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var JSXElement = function (_Expression) {
    (0, _inherits3.default)(JSXElement, _Expression);

    function JSXElement(childNodes) {
        (0, _classCallCheck3.default)(this, JSXElement);
        return (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(JSXElement).call(this, 'JSXElement', childNodes));
    }

    (0, _createClass3.default)(JSXElement, [{
        key: '_acceptChildren',
        value: function _acceptChildren(children) {
            var closingElement = null;
            var childrenProperty = [];

            var openingElement = children.passNode('JSXOpeningElement');
            if (!openingElement.selfClosing) {
                children.skipNonCode();
                while (!children.isNode('JSXClosingElement')) {
                    childrenProperty.push(children.passOneOfNode(['JSXText', 'JSXExpressionContainer', 'JSXElement']));
                }
                children.skipNonCode();
                if (children.isNode('JSXClosingElement')) {
                    closingElement = children.passNode('JSXClosingElement');
                }
            }
            children.assertEnd();

            this.children = childrenProperty;
            this.closingElement = closingElement;
            this.openingElement = openingElement;
        }
    }]);
    return JSXElement;
}(_Expression3.default);

exports.default = JSXElement;
//# sourceMappingURL=JSXElement.js.map