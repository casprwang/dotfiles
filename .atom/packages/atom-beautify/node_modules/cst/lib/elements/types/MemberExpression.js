'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _Expression2 = require('../Expression');

var _Expression3 = _interopRequireDefault(_Expression2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MemberExpression = function (_Expression) {
    (0, _inherits3.default)(MemberExpression, _Expression);

    function MemberExpression(childNodes) {
        (0, _classCallCheck3.default)(this, MemberExpression);

        var _this = (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(MemberExpression).call(this, 'MemberExpression', childNodes));

        _this.isAssignable = true;
        return _this;
    }

    (0, _createClass3.default)(MemberExpression, [{
        key: '_acceptChildren',
        value: function _acceptChildren(children) {
            var object = children.passExpressionOrSuper();
            children.skipNonCode();

            var property = void 0;
            var computed = false;
            if (children.isToken('Punctuator', '.')) {
                children.passToken();
                children.skipNonCode();

                property = children.passNode('Identifier');
                computed = false;
            } else {
                children.passToken('Punctuator', '[');
                children.skipNonCode();
                property = children.passExpression();
                children.skipNonCode();
                children.passToken('Punctuator', ']');
                computed = true;
            }

            children.assertEnd();

            this.object = object;
            this.property = property;
            this.computed = computed;
        }
    }]);
    return MemberExpression;
}(_Expression3.default);

exports.default = MemberExpression;
//# sourceMappingURL=MemberExpression.js.map