{"version":3,"sources":["../../../src/elements/types/VariableDeclarator.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqB,kB;;;;;;AAIjB,gCAAY,UAAZ,EAAwB;AAAA;AAAA,2HACd,oBADc,EACQ,UADR;AAEvB;;;;wCAEe,Q,EAAU;AACtB,gBAAI,KAAK,SAAS,WAAT,EAAT;;AAEA,gBAAI,OAAO,IAAX;AACA,gBAAI,CAAC,SAAS,KAAd,EAAqB;AACjB,yBAAS,WAAT;AACA,yBAAS,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;;AAEA,yBAAS,WAAT;AACA,uBAAO,SAAS,cAAT,EAAP;AACH;;AAED,qBAAS,SAAT;;AAEA,iBAAK,EAAL,GAAU,EAAV;AACA,iBAAK,IAAL,GAAY,IAAZ;AACH;;;;;kBAxBgB,kB","file":"VariableDeclarator.js","sourcesContent":["import Node from '../Node';\n\nexport default class VariableDeclarator extends Node {\n\n    // TODO: Initial value is required for const.\n\n    constructor(childNodes) {\n        super('VariableDeclarator', childNodes);\n    }\n\n    _acceptChildren(children) {\n        let id = children.passPattern();\n\n        let init = null;\n        if (!children.isEnd) {\n            children.skipNonCode();\n            children.passToken('Punctuator', '=');\n\n            children.skipNonCode();\n            init = children.passExpression();\n        }\n\n        children.assertEnd();\n\n        this.id = id;\n        this.init = init;\n    }\n}\n"]}