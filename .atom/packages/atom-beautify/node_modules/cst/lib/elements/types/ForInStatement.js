'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _Statement2 = require('../Statement');

var _Statement3 = _interopRequireDefault(_Statement2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ForInStatement = function (_Statement) {
    (0, _inherits3.default)(ForInStatement, _Statement);

    function ForInStatement(childNodes) {
        (0, _classCallCheck3.default)(this, ForInStatement);

        var _this = (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(ForInStatement).call(this, 'ForInStatement', childNodes));

        _this.each = false;
        return _this;
    }

    (0, _createClass3.default)(ForInStatement, [{
        key: '_acceptChildren',
        value: function _acceptChildren(children) {
            children.passToken('Keyword', 'for');
            children.skipNonCode();

            children.passToken('Punctuator', '(');
            children.skipNonCode();

            var left = void 0;
            if (children.isNode('VariableDeclaration')) {
                left = children.currentElement;
                children.moveNext();
            } else {
                left = children.passAssignable();
            }
            children.skipNonCode();

            children.passToken('Keyword', 'in');
            children.skipNonCode();

            var right = children.passExpression();
            children.skipNonCode();

            children.passToken('Punctuator', ')');
            children.skipNonCode();

            var body = children.passStatement();

            children.assertEnd();

            this.left = left;
            this.right = right;
            this.body = body;
        }
    }]);
    return ForInStatement;
}(_Statement3.default);

exports.default = ForInStatement;
//# sourceMappingURL=ForInStatement.js.map