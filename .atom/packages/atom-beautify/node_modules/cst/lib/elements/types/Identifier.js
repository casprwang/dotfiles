'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _Expression2 = require('../Expression');

var _Expression3 = _interopRequireDefault(_Expression2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Identifier = function (_Expression) {
    (0, _inherits3.default)(Identifier, _Expression);

    function Identifier(childNodes) {
        (0, _classCallCheck3.default)(this, Identifier);

        var _this = (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(Identifier).call(this, 'Identifier', childNodes));

        _this.isPattern = true;
        _this.isAssignable = true;
        return _this;
    }

    (0, _createClass3.default)(Identifier, [{
        key: '_acceptChildren',
        value: function _acceptChildren(children) {
            var name = void 0;

            children.assertToken();

            // @see https://github.com/babel/babylon/issues/18
            switch (children.currentElement.type) {
                case 'Identifier':
                    name = children.currentElement.value;
                    break;
                case 'Boolean':
                case 'Null':
                    name = children.currentElement._sourceCode;
                    break;
                default:
                    children.assertToken('Identifier');
            }
            children.passToken();

            children.assertEnd();
            this.name = name;
        }
    }]);
    return Identifier;
}(_Expression3.default);

exports.default = Identifier;
//# sourceMappingURL=Identifier.js.map