{"version":3,"sources":["../../../src/elements/types/JSXExpressionContainer.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;IAEqB,sB;;;AACjB,oCAAY,UAAZ,EAAwB;AAAA;AAAA,+HACd,wBADc,EACY,UADZ;AAEvB;;;;wCAEe,Q,EAAU;AACtB,qBAAS,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACA,qBAAS,WAAT;;AAEA,gBAAI,mBAAJ;;;AAGA,gBAAI,SAAS,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrC,6BAAa,kCAAb;AACH,aAFD,MAEO;;AAEH,6BAAa,SAAS,cAAT,EAAb;AACA,yBAAS,WAAT;AACH;;AAED,qBAAS,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACA,qBAAS,SAAT;;AAEA,iBAAK,UAAL,GAAkB,UAAlB;AACH;;;;;kBAxBgB,sB","file":"JSXExpressionContainer.js","sourcesContent":["import Expression from '../Expression';\nimport JSXEmptyExpression from './JSXEmptyExpression';\n\nexport default class JSXExpressionContainer extends Expression {\n    constructor(childNodes) {\n        super('JSXExpressionContainer', childNodes);\n    }\n\n    _acceptChildren(children) {\n        children.passToken('Punctuator', '{');\n        children.skipNonCode();\n\n        let expression;\n\n        // JSXEmptyExpression\n        if (children.isToken('Punctuator', '}')) {\n            expression = new JSXEmptyExpression();\n        } else {\n            // Expression\n            expression = children.passExpression();\n            children.skipNonCode();\n        }\n\n        children.passToken('Punctuator', '}');\n        children.assertEnd();\n\n        this.expression = expression;\n    }\n}\n"]}