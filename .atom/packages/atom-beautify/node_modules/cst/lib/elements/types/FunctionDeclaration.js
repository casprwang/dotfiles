'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _Statement2 = require('../Statement');

var _Statement3 = _interopRequireDefault(_Statement2);

var _getFunctionParams = require('./utils/getFunctionParams');

var _getFunctionParams2 = _interopRequireDefault(_getFunctionParams);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var FunctionDeclaration = function (_Statement) {
    (0, _inherits3.default)(FunctionDeclaration, _Statement);

    function FunctionDeclaration(childNodes) {
        (0, _classCallCheck3.default)(this, FunctionDeclaration);

        var _this = (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(FunctionDeclaration).call(this, 'FunctionDeclaration', childNodes));

        _this.expression = false;
        _this.isFunction = true;
        return _this;
    }

    (0, _createClass3.default)(FunctionDeclaration, [{
        key: '_acceptChildren',
        value: function _acceptChildren(children) {
            var params = void 0;
            var async = false;
            var id = null;

            if (children.isToken('Identifier', 'async')) {
                async = true;
                children.passToken('Identifier', 'async');
                children.skipNonCode();
            }

            children.passToken('Keyword', 'function');
            children.skipNonCode();

            var generator = false;
            if (children.isToken('Punctuator', '*')) {
                generator = true;
                children.moveNext();
                children.skipNonCode();
            }

            if (children.isNode('Identifier')) {
                id = children.passNode('Identifier');
                children.skipNonCode();
            }

            params = (0, _getFunctionParams2.default)(children);
            children.skipNonCode();

            var body = children.passStatement();

            children.assertEnd();

            this.async = async;
            this.id = id;
            this.params = params;
            this.body = body;
            this.generator = generator;
        }
    }]);
    return FunctionDeclaration;
}(_Statement3.default);

exports.default = FunctionDeclaration;
//# sourceMappingURL=FunctionDeclaration.js.map