{"version":3,"sources":["../../../src/elements/types/ImportDeclaration.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqB,iB;;;AACjB,+BAAY,UAAZ,EAAwB;AAAA;AAAA,0HACd,mBADc,EACO,UADP;AAEvB;;;;wCAEe,Q,EAAU;AACtB,qBAAS,SAAT,CAAmB,SAAnB,EAA8B,QAA9B;AACA,qBAAS,WAAT;;AAEA,gBAAI,aAAa,EAAjB;AACA,gBAAI,SAAS,IAAb;;AAEA,gBAAI,SAAS,MAAT,CAAgB,wBAAhB,CAAJ,EAA+C;AAC3C,2BAAW,IAAX,CAAgB,SAAS,mBAAT,EAAhB;AACA,yBAAS,WAAT;AACA,oBAAI,SAAS,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrC,6BAAS,QAAT;AACA,6BAAS,WAAT;AACH;AACJ,aAPD,MAOO,IAAI,SAAS,MAAT,CAAgB,0BAAhB,CAAJ,EAAiD;AACpD,2BAAW,IAAX,CAAgB,SAAS,mBAAT,EAAhB;AACA,yBAAS,WAAT;AACH;;AAED,gBAAI,SAAS,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrC,yBAAS,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACA,yBAAS,WAAT;AACA,uBAAO,CAAC,SAAS,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAR,EAA6C;AACzC,+BAAW,IAAX,CAAgB,SAAS,mBAAT,EAAhB;AACA,6BAAS,WAAT;AACA,wBAAI,SAAS,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrC,iCAAS,QAAT;AACA,iCAAS,WAAT;AACH;AACJ;AACD,yBAAS,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACA,yBAAS,WAAT;AACH;;AAED,gBAAI,SAAS,OAAT,CAAiB,YAAjB,EAA+B,MAA/B,CAAJ,EAA4C;AACxC,yBAAS,SAAT,CAAmB,YAAnB,EAAiC,MAAjC;AACA,yBAAS,WAAT;AACH;;AAED,qBAAS,SAAS,QAAT,CAAkB,eAAlB,CAAT;AACA,gBAAI,CAAC,SAAS,KAAd,EAAqB;AACjB,yBAAS,WAAT;AACA,yBAAS,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACH;;AAED,qBAAS,SAAT;;AAEA,iBAAK,UAAL,GAAkB,UAAlB;AACA,iBAAK,MAAL,GAAc,MAAd;AACH;;;;;kBAtDgB,iB","file":"ImportDeclaration.js","sourcesContent":["import ModuleDeclaration from '../ModuleDeclaration';\n\nexport default class ImportDeclaration extends ModuleDeclaration {\n    constructor(childNodes) {\n        super('ImportDeclaration', childNodes);\n    }\n\n    _acceptChildren(children) {\n        children.passToken('Keyword', 'import');\n        children.skipNonCode();\n\n        let specifiers = [];\n        let source = null;\n\n        if (children.isNode('ImportDefaultSpecifier')) {\n            specifiers.push(children.passModuleSpecifier());\n            children.skipNonCode();\n            if (children.isToken('Punctuator', ',')) {\n                children.moveNext();\n                children.skipNonCode();\n            }\n        } else if (children.isNode('ImportNamespaceSpecifier')) {\n            specifiers.push(children.passModuleSpecifier());\n            children.skipNonCode();\n        }\n\n        if (children.isToken('Punctuator', '{')) {\n            children.passToken('Punctuator', '{');\n            children.skipNonCode();\n            while (!children.isToken('Punctuator', '}')) {\n                specifiers.push(children.passModuleSpecifier());\n                children.skipNonCode();\n                if (children.isToken('Punctuator', ',')) {\n                    children.moveNext();\n                    children.skipNonCode();\n                }\n            }\n            children.passToken('Punctuator', '}');\n            children.skipNonCode();\n        }\n\n        if (children.isToken('Identifier', 'from')) {\n            children.passToken('Identifier', 'from');\n            children.skipNonCode();\n        }\n\n        source = children.passNode('StringLiteral');\n        if (!children.isEnd) {\n            children.skipNonCode();\n            children.passToken('Punctuator', ';');\n        }\n\n        children.assertEnd();\n\n        this.specifiers = specifiers;\n        this.source = source;\n    }\n}\n"]}