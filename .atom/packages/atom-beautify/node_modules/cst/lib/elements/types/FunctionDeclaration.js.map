{"version":3,"sources":["../../../src/elements/types/FunctionDeclaration.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;IAEqB,mB;;;AACjB,iCAAY,UAAZ,EAAwB;AAAA;;AAAA,iIACd,qBADc,EACS,UADT;;AAEpB,cAAK,UAAL,GAAkB,KAAlB;AACA,cAAK,UAAL,GAAkB,IAAlB;AAHoB;AAIvB;;;;wCAEe,Q,EAAU;AACtB,gBAAI,eAAJ;AACA,gBAAI,QAAQ,KAAZ;AACA,gBAAI,KAAK,IAAT;;AAEA,gBAAI,SAAS,OAAT,CAAiB,YAAjB,EAA+B,OAA/B,CAAJ,EAA6C;AACzC,wBAAQ,IAAR;AACA,yBAAS,SAAT,CAAmB,YAAnB,EAAiC,OAAjC;AACA,yBAAS,WAAT;AACH;;AAED,qBAAS,SAAT,CAAmB,SAAnB,EAA8B,UAA9B;AACA,qBAAS,WAAT;;AAEA,gBAAI,YAAY,KAAhB;AACA,gBAAI,SAAS,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrC,4BAAY,IAAZ;AACA,yBAAS,QAAT;AACA,yBAAS,WAAT;AACH;;AAED,gBAAI,SAAS,MAAT,CAAgB,YAAhB,CAAJ,EAAmC;AAC/B,qBAAK,SAAS,QAAT,CAAkB,YAAlB,CAAL;AACA,yBAAS,WAAT;AACH;;AAED,qBAAS,iCAAkB,QAAlB,CAAT;AACA,qBAAS,WAAT;;AAEA,gBAAI,OAAO,SAAS,aAAT,EAAX;;AAEA,qBAAS,SAAT;;AAEA,iBAAK,KAAL,GAAa,KAAb;AACA,iBAAK,EAAL,GAAU,EAAV;AACA,iBAAK,MAAL,GAAc,MAAd;AACA,iBAAK,IAAL,GAAY,IAAZ;AACA,iBAAK,SAAL,GAAiB,SAAjB;AACH;;;;;kBA7CgB,mB","file":"FunctionDeclaration.js","sourcesContent":["import Statement from '../Statement';\nimport getFunctionParams from './utils/getFunctionParams';\n\nexport default class FunctionDeclaration extends Statement {\n    constructor(childNodes) {\n        super('FunctionDeclaration', childNodes);\n        this.expression = false;\n        this.isFunction = true;\n    }\n\n    _acceptChildren(children) {\n        let params;\n        let async = false;\n        let id = null;\n\n        if (children.isToken('Identifier', 'async')) {\n            async = true;\n            children.passToken('Identifier', 'async');\n            children.skipNonCode();\n        }\n\n        children.passToken('Keyword', 'function');\n        children.skipNonCode();\n\n        let generator = false;\n        if (children.isToken('Punctuator', '*')) {\n            generator = true;\n            children.moveNext();\n            children.skipNonCode();\n        }\n\n        if (children.isNode('Identifier')) {\n            id = children.passNode('Identifier');\n            children.skipNonCode();\n        }\n\n        params = getFunctionParams(children);\n        children.skipNonCode();\n\n        let body = children.passStatement();\n\n        children.assertEnd();\n\n        this.async = async;\n        this.id = id;\n        this.params = params;\n        this.body = body;\n        this.generator = generator;\n    }\n}\n"]}