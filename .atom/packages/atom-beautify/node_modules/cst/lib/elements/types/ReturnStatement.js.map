{"version":3,"sources":["../../../src/elements/types/ReturnStatement.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqB,e;;;;;;AAIjB,6BAAY,UAAZ,EAAwB;AAAA;AAAA,wHACd,iBADc,EACK,UADL;AAEvB;;;;wCAEe,Q,EAAU;AACtB,qBAAS,SAAT,CAAmB,SAAnB,EAA8B,QAA9B;;AAEA,gBAAI,WAAW,IAAf;AACA,gBAAI,CAAC,SAAS,KAAd,EAAqB;AACjB,yBAAS,mBAAT;AACA,oBAAI,SAAS,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrC,6BAAS,SAAT;AACH,iBAFD,MAEO;AACH,+BAAW,SAAS,0BAAT,EAAX;AACA,6BAAS,WAAT;AACA,6BAAS,aAAT;AACH;AACJ;;AAED,qBAAS,SAAT;;AAEA,iBAAK,QAAL,GAAgB,QAAhB;AACH;;;;;kBA1BgB,e","file":"ReturnStatement.js","sourcesContent":["import Statement from '../Statement';\n\nexport default class ReturnStatement extends Statement {\n\n    // TODO: Requires a function.\n\n    constructor(childNodes) {\n        super('ReturnStatement', childNodes);\n    }\n\n    _acceptChildren(children) {\n        children.passToken('Keyword', 'return');\n\n        let argument = null;\n        if (!children.isEnd) {\n            children.skipSameLineNonCode();\n            if (children.isToken('Punctuator', ';')) {\n                children.passToken();\n            } else {\n                argument = children.passExpressionOrWhitespace();\n                children.skipNonCode();\n                children.skipSemicolon();\n            }\n        }\n\n        children.assertEnd();\n\n        this.argument = argument;\n    }\n}\n"]}