{"version":3,"sources":["../../../src/elements/types/ObjectMethod.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAM,kBAAkB;AACpB,SAAK,IADe;AAEpB,SAAK;AAFe,CAAxB;;IAKqB,Y;;;AACjB,0BAAY,UAAZ,EAAwB;AAAA;;AAAA,0HACd,cADc,EACE,UADF;;AAEpB,cAAK,UAAL,GAAkB,IAAlB;AAFoB;AAGvB;;;;wCAEe,Q,EAAU;AACtB,gBAAI,YAAJ;AACA,gBAAI,YAAY,KAAhB;AACA,gBAAI,WAAW,KAAf;AACA,gBAAI,OAAO,QAAX;AACA,gBAAI,QAAQ,KAAZ;AACA,gBAAI,SAAS,EAAb;AACA,gBAAI,aAAJ;AACA,gBAAI,SAAS,IAAb;;AAEA,gBAAI,SAAS,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrC,yBAAS,SAAT;AACA,yBAAS,WAAT;AACA,4BAAY,IAAZ;AACH;;AAED,gBAAI,SAAS,OAAT,CAAiB,YAAjB,EAA+B,OAA/B,CAAJ,EAA6C;AACzC,wBAAQ,IAAR;AACA,yBAAS,SAAT;AACA,yBAAS,WAAT;AACH;;AAED,gBAAI,SAAS,OAAT,CAAiB,YAAjB,EAA+B,eAA/B,CAAJ,EAAqD;AACjD,uBAAO,SAAS,cAAT,CAAwB,KAA/B;AACA,yBAAS,KAAT;;AAEA,yBAAS,SAAT,CAAmB,YAAnB;AACA,yBAAS,WAAT;AACH;;AAED,uBAAW,SAAS,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAX;AACA,kBAAM,QAAQ,QAAR,CAAN;;AAEA,qBAAS,WAAT;;AAEA,qBAAS,iCAAkB,QAAlB,CAAT;AACA,qBAAS,WAAT;;AAEA,mBAAO,SAAS,QAAT,CAAkB,gBAAlB,CAAP;;AAEA,qBAAS,SAAT;;AAEA,iBAAK,SAAL,GAAiB,SAAjB;AACA,iBAAK,IAAL,GAAY,IAAZ;AACA,iBAAK,GAAL,GAAW,GAAX;AACA,iBAAK,QAAL,GAAgB,QAAhB;AACA,iBAAK,MAAL,GAAc,MAAd;AACA,iBAAK,MAAL,GAAc,MAAd;AACA,iBAAK,IAAL,GAAY,IAAZ;AACA,iBAAK,KAAL,GAAa,KAAb;AACH;;;;;kBAxDgB,Y;;;AA2DrB,SAAS,OAAT,CAAiB,QAAjB,EAA2B;AACvB,QAAI,SAAS,MAAT,CAAgB,eAAhB,KAAoC,SAAS,MAAT,CAAgB,YAAhB,CAAxC,EAAuE;AACnE,eAAO,SAAS,QAAT,EAAP;AACH,KAFD,MAEO;AACH,iBAAS,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACA,iBAAS,WAAT;AACA,YAAI,SAAS,SAAS,cAAT,EAAb;AACA,iBAAS,WAAT;AACA,iBAAS,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACA,eAAO,MAAP;AACH;AACJ","file":"ObjectMethod.js","sourcesContent":["import Node from '../Node';\nimport getFunctionParams from './utils/getFunctionParams';\n\nconst getterAndSetter = {\n    get: true,\n    set: true\n};\n\nexport default class ObjectMethod extends Node {\n    constructor(childNodes) {\n        super('ObjectMethod', childNodes);\n        this.isFunction = true;\n    }\n\n    _acceptChildren(children) {\n        let key;\n        let generator = false;\n        let computed = false;\n        let kind = 'method';\n        let async = false;\n        let params = [];\n        let body;\n        let method = true;\n\n        if (children.isToken('Punctuator', '*')) {\n            children.passToken();\n            children.skipNonCode();\n            generator = true;\n        }\n\n        if (children.isToken('Identifier', 'async')) {\n            async = true;\n            children.passToken();\n            children.skipNonCode();\n        }\n\n        if (children.isToken('Identifier', getterAndSetter)) {\n            kind = children.currentElement.value;\n            method = false;\n\n            children.passToken('Identifier');\n            children.skipNonCode();\n        }\n\n        computed = children.isToken('Punctuator', '[');\n        key = readKey(children);\n\n        children.skipNonCode();\n\n        params = getFunctionParams(children);\n        children.skipNonCode();\n\n        body = children.passNode('BlockStatement');\n\n        children.assertEnd();\n\n        this.generator = generator;\n        this.kind = kind;\n        this.key = key;\n        this.computed = computed;\n        this.method = method;\n        this.params = params;\n        this.body = body;\n        this.async = async;\n    }\n}\n\nfunction readKey(children) {\n    if (children.isNode('StringLiteral') || children.isNode('Identifier')) {\n        return children.passNode();\n    } else {\n        children.passToken('Punctuator', '[');\n        children.skipNonCode();\n        let result = children.passExpression();\n        children.skipNonCode();\n        children.passToken('Punctuator', ']');\n        return result;\n    }\n}\n"]}