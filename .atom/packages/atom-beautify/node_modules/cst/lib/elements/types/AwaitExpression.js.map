{"version":3,"sources":["../../../src/elements/types/AwaitExpression.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqB,e;;;;;;AAIjB,6BAAY,UAAZ,EAAwB;AAAA;AAAA,wHACd,iBADc,EACK,UADL;AAEvB;;;;wCAEe,Q,EAAU;AACtB,qBAAS,SAAT,CAAmB,YAAnB,EAAiC,OAAjC;;AAEA,gBAAI,WAAW,IAAf;;AAEA,gBAAI,CAAC,SAAS,KAAd,EAAqB;AACjB,yBAAS,WAAT;AACA,2BAAW,SAAS,cAAT,EAAX;AACH;;AAED,qBAAS,SAAT;;AAEA,iBAAK,QAAL,GAAgB,QAAhB;AACH;;;;;kBArBgB,e","file":"AwaitExpression.js","sourcesContent":["import Expression from '../Expression';\n\nexport default class AwaitExpression extends Expression {\n\n    // TODO: Requires an async function.\n\n    constructor(childNodes) {\n        super('AwaitExpression', childNodes);\n    }\n\n    _acceptChildren(children) {\n        children.passToken('Identifier', 'await');\n\n        let argument = null;\n\n        if (!children.isEnd) {\n            children.skipNonCode();\n            argument = children.passExpression();\n        }\n\n        children.assertEnd();\n\n        this.argument = argument;\n    }\n}\n"]}