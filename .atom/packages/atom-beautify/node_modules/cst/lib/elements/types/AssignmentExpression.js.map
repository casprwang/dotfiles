{"version":3,"sources":["../../../src/elements/types/AssignmentExpression.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAEA,IAAM,sBAAsB;AACxB,SAAK,IADmB;AAExB,UAAM,IAFkB;AAGxB,UAAM,IAHkB;AAIxB,UAAM,IAJkB;AAKxB,UAAM,IALkB;AAMxB,UAAM,IANkB;AAOxB,WAAO,IAPiB;AAQxB,WAAO,IARiB;AASxB,YAAQ,IATgB;AAUxB,UAAM,IAVkB;AAWxB,UAAM,IAXkB;AAYxB,UAAM,IAZkB;AAaxB,WAAO;AAbiB,CAA5B;;IAgBqB,oB;;;AACjB,kCAAY,UAAZ,EAAwB;AAAA;AAAA,6HACd,sBADc,EACU,UADV;AAEvB;;;;wCAEe,Q,EAAU;AACtB,gBAAI,OAAO,SAAS,cAAT,EAAX;AACA,qBAAS,WAAT;AACA,qBAAS,WAAT,CAAqB,YAArB,EAAmC,mBAAnC;AACA,gBAAI,WAAW,SAAS,cAAT,CAAwB,KAAvC;AACA,qBAAS,QAAT;AACA,qBAAS,WAAT;AACA,gBAAI,QAAQ,SAAS,cAAT,EAAZ;AACA,qBAAS,SAAT;;AAEA,iBAAK,IAAL,GAAY,IAAZ;AACA,iBAAK,QAAL,GAAgB,QAAhB;AACA,iBAAK,KAAL,GAAa,KAAb;AACH;;;;;kBAlBgB,oB","file":"AssignmentExpression.js","sourcesContent":["import Expression from '../Expression';\n\nconst assignmentOperators = {\n    '=': true,\n    '+=': true,\n    '-=': true,\n    '*=': true,\n    '/=': true,\n    '%=': true,\n    '<<=': true,\n    '>>=': true,\n    '>>>=': true,\n    '|=': true,\n    '^=': true,\n    '&=': true,\n    '**=': true\n};\n\nexport default class AssignmentExpression extends Expression {\n    constructor(childNodes) {\n        super('AssignmentExpression', childNodes);\n    }\n\n    _acceptChildren(children) {\n        let left = children.passAssignable();\n        children.skipNonCode();\n        children.assertToken('Punctuator', assignmentOperators);\n        let operator = children.currentElement.value;\n        children.moveNext();\n        children.skipNonCode();\n        let right = children.passExpression();\n        children.assertEnd();\n\n        this.left = left;\n        this.operator = operator;\n        this.right = right;\n    }\n}\n"]}