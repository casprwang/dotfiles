{"version":3,"sources":["../../../src/elements/types/RestElement.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqB,W;;;;;;AAIjB,yBAAY,UAAZ,EAAwB;AAAA;;AAAA,yHACd,aADc,EACC,UADD;;AAEpB,cAAK,SAAL,GAAiB,IAAjB;AAFoB;AAGvB;;;;wCAEe,Q,EAAU;AACtB,qBAAS,SAAT,CAAmB,YAAnB,EAAiC,KAAjC;;AAEA,qBAAS,WAAT;;AAEA,gBAAI,CAAC,SAAS,MAAT,CAAgB,kBAAhB,CAAL,EAA0C;AACtC,yBAAS,aAAT;AACH;;AAED,gBAAI,WAAW,SAAS,cAAxB;AACA,qBAAS,QAAT;;AAEA,qBAAS,SAAT;;AAEA,iBAAK,QAAL,GAAgB,QAAhB;AACH;;;;;kBAxBgB,W","file":"RestElement.js","sourcesContent":["import Node from '../Node';\n\nexport default class RestElement extends Node {\n\n    // TODO: Requires a function?\n\n    constructor(childNodes) {\n        super('RestElement', childNodes);\n        this.isPattern = true;\n    }\n\n    _acceptChildren(children) {\n        children.passToken('Punctuator', '...');\n\n        children.skipNonCode();\n\n        if (!children.isNode('MemberExpression')) {\n            children.assertPattern();\n        }\n\n        let argument = children.currentElement;\n        children.moveNext();\n\n        children.assertEnd();\n\n        this.argument = argument;\n    }\n}\n"]}