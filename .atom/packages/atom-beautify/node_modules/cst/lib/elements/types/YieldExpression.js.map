{"version":3,"sources":["../../../src/elements/types/YieldExpression.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqB,e;;;;;;AAIjB,6BAAY,UAAZ,EAAwB;AAAA;AAAA,wHACd,iBADc,EACK,UADL;AAEvB;;;;wCAEe,Q,EAAU;AACtB,qBAAS,SAAT,CAAmB,SAAnB,EAA8B,OAA9B;;AAEA,gBAAI,WAAW,IAAf;AACA,gBAAI,WAAW,KAAf;;AAEA,gBAAI,CAAC,SAAS,KAAd,EAAqB;AACjB,yBAAS,WAAT;;AAEA,oBAAI,SAAS,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrC,6BAAS,SAAT;AACA,6BAAS,WAAT;AACA,+BAAW,IAAX;AACH;;AAED,2BAAW,SAAS,cAAT,EAAX;AACH;;AAED,qBAAS,SAAT;;AAEA,iBAAK,QAAL,GAAgB,QAAhB;AACA,iBAAK,QAAL,GAAgB,QAAhB;AACH;;;;;kBA9BgB,e","file":"YieldExpression.js","sourcesContent":["import Expression from '../Expression';\n\nexport default class YieldExpression extends Expression {\n\n    // TODO: Requires a generator function.\n\n    constructor(childNodes) {\n        super('YieldExpression', childNodes);\n    }\n\n    _acceptChildren(children) {\n        children.passToken('Keyword', 'yield');\n\n        let argument = null;\n        let delegate = false;\n\n        if (!children.isEnd) {\n            children.skipNonCode();\n\n            if (children.isToken('Punctuator', '*')) {\n                children.passToken();\n                children.skipNonCode();\n                delegate = true;\n            }\n\n            argument = children.passExpression();\n        }\n\n        children.assertEnd();\n\n        this.argument = argument;\n        this.delegate = delegate;\n    }\n}\n"]}