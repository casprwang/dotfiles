{"version":3,"sources":["../../../src/plugins/scopes/Variable.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAKA;;;;;;IAEqB,Q;AACjB,4BAA6E;AAAA,YAAhE,IAAgE,QAAhE,IAAgE;AAAA,YAA1D,IAA0D,QAA1D,IAA0D;AAAA,YAApD,KAAoD,QAApD,KAAoD;AAAA;;AACzE,aAAK,IAAL,GAAY,IAAZ;AACA,aAAK,IAAL,GAAY,IAAZ;AACA,aAAK,KAAL,GAAa,KAAb;AACA,aAAK,YAAL,GAAoB,mBAApB;AACA,aAAK,WAAL,GAAmB,mBAAnB;AACH;;;;uCAQc,U,EAAwB;AACnC,uBAAW,QAAX,GAAsB,IAAtB;AACA,iBAAK,YAAL,CAAkB,GAAlB,CAAsB,UAAtB;AACH;;;sCAEa,S,EAAsB;AAChC,sBAAU,QAAV,GAAqB,IAArB;AACA,iBAAK,WAAL,CAAiB,GAAjB,CAAqB,SAArB;AACH;;;0CAEiB,U,EAAwB;AACtC,iBAAK,YAAL,CAAkB,MAAlB,CAAyB,UAAzB;AACH;;;yCAEgB,S,EAAsB;AACnC,iBAAK,WAAL,CAAiB,MAAjB,CAAwB,SAAxB;AACH;;;4CAEmB,Q,EAAoB;AAAA;AAAA;AAAA;;AAAA;AACpC,gEAAsB,KAAK,WAA3B,4GAAwC;AAAA,wBAA/B,SAA+B;;AACpC,wBAAI,CAAC,UAAU,IAAf,EAAqB;AACjB,6BAAK,WAAL,CAAiB,MAAjB,CAAwB,SAAxB;AACA,iCAAS,WAAT,CAAqB,GAArB,CAAyB,SAAzB;AACA,kCAAU,QAAV,GAAqB,QAArB;AACH;AACJ;AAPmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQvC;;;yCAE8B;AAC3B,mBAAO,uBAAQ,KAAK,YAAb,CAAP;AACH;;;wCAE4B;AACzB,mBAAO,uBAAQ,KAAK,WAAb,CAAP;AACH;;;;;kBAjDgB,Q","file":"Variable.js","sourcesContent":["/* @flow */\n\nimport type Definition from './Definition';\nimport type Reference from './Reference';\nimport type Scope from './Scope';\nimport toArray from '../../utils/toArray';\n\nexport default class Variable {\n    constructor({name, type, scope}: {name: string, type: string, scope: Scope}) {\n        this.name = name;\n        this.type = type;\n        this.scope = scope;\n        this._definitions = new Set();\n        this._references = new Set();\n    }\n\n    name: string;\n    type: string;\n    scope: Scope;\n    _references: Set<Reference>;\n    _definitions: Set<Definition>;\n\n    _addDefinition(definition: Definition) {\n        definition.variable = this;\n        this._definitions.add(definition);\n    }\n\n    _addReference(reference: Reference) {\n        reference.variable = this;\n        this._references.add(reference);\n    }\n\n    _removeDefinition(definition: Definition) {\n        this._definitions.delete(definition);\n    }\n\n    _removeReference(reference: Reference) {\n        this._references.delete(reference);\n    }\n\n    _transferReferences(variable: Variable) {\n        for (let reference of this._references) {\n            if (!reference.type) {\n                this._references.delete(reference);\n                variable._references.add(reference);\n                reference.variable = variable;\n            }\n        }\n    }\n\n    getDefinitions(): Definition[] {\n        return toArray(this._definitions);\n    }\n\n    getReferences(): Reference[] {\n        return toArray(this._references);\n    }\n}\n"]}