{"version":3,"sources":["../../../src/plugins/scopes/Definition.js"],"names":[],"mappings":";;;;;;;;;;;;;IAMqB,U,GACjB,0BAAiF;AAAA,QAApE,IAAoE,QAApE,IAAoE;AAAA,QAA9D,IAA8D,QAA9D,IAA8D;AAAA,QAAxD,KAAwD,QAAxD,KAAwD;AAAA;;AAC7E,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,KAAL,GAAa,KAAb;AACH,C;;;;;;;kBALgB,U;AAgBd,IAAM,wBAAQ;AACjB,iBAAa,aADI;AAEjB,cAAU,UAFO;AAGjB,cAAU,UAHO;AAIjB,eAAW,WAJM;AAKjB,mBAAe,eALE;AAMjB,sBAAkB,kBAND;AAOjB,mBAAe,eAPE;AAQjB,oBAAgB,gBARC;AASjB,aAAS;AATQ,CAAd;;;;;;AAgBA,IAAM,gCAAY;AACrB,iBAAa,CADQ;AAErB,cAAU,CAFW;AAGrB,cAAU,CAHW;AAIrB,mBAAe,CAJM;AAKrB,eAAW,CALU;AAMrB,sBAAkB,CANG;AAOrB,mBAAe,CAPM;AAQrB,aAAS,CARY;AASrB,oBAAgB;AATK,CAAlB","file":"Definition.js","sourcesContent":["/* @flow */\n\nimport type Identifier from '../../elements/types/Identifier';\nimport type Scope from './Scope';\nimport type Variable from './Variable';\n\nexport default class Definition {\n    constructor({node, type, scope}: {node: Identifier, type: string, scope: Scope}) {\n        this.node = node;\n        this.type = type;\n        this.scope = scope;\n    }\n\n    node: Identifier;\n    variable: Variable;\n    type: string;\n    scope: Scope;\n}\n\n/**\n * Possible variable types.\n */\nexport const types = {\n    LetVariable: 'LetVariable',\n    Constant: 'Constant',\n    Variable: 'Variable',\n    Parameter: 'Parameter',\n    SelfReference: 'SelfReference',\n    CatchClauseError: 'CatchClauseError',\n    ImportBinding: 'ImportBinding',\n    ImplicitGlobal: 'ImplicitGlobal',\n    BuiltIn: 'BuiltIn'\n};\n\n/**\n * Priorities in variable scopes.\n * For instance, `var x` hides `x` function argument and `x` argument hides global `x`.\n */\nexport const typeOrder = {\n    LetVariable: 0,\n    Constant: 0,\n    Variable: 0,\n    ImportBinding: 1,\n    Parameter: 1,\n    CatchClauseError: 1,\n    SelfReference: 2,\n    BuiltIn: 3,\n    ImplicitGlobal: 3\n};\n"]}