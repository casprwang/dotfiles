{"version":3,"sources":["../../src/utils/lines.js"],"names":[],"mappings":";;;;;QAKgB,Q,GAAA,Q;QAIA,W,GAAA,W;;;AAPhB,IAAM,iBAAiB,YAAvB;AACA,IAAM,uBAAuB,aAA7B;;AAEO,SAAS,QAAT,CAAkB,KAAlB,EAA2C;AAC9C,WAAO,MAAM,KAAN,CAAY,cAAZ,CAAP;AACH;;AAEM,SAAS,WAAT,CAAqB,IAArB,EAA2B;AAC9B,QAAI,QAAQ,EAAZ;AACA,yBAAqB,SAArB,GAAiC,CAAjC;AACA,QAAI,aAAa,CAAjB;AACA,QAAI,KAAJ;AACA,WAAO,CAAC,QAAQ,qBAAqB,IAArB,CAA0B,IAA1B,CAAT,MAA8C,IAArD,EAA2D;AACvD,cAAM,IAAN,CAAW;AACP,oBAAQ,UADD;AAEP,kBAAM,KAAK,SAAL,CAAe,UAAf,EAA2B,MAAM,KAAjC,CAFC;AAGP,uBAAW,MAAM,CAAN;AAHJ,SAAX;AAKA,qBAAa,MAAM,KAAN,GAAc,MAAM,CAAN,EAAS,MAApC;AACH;AACD,UAAM,IAAN,CAAW,EAAC,QAAQ,UAAT,EAAqB,MAAM,KAAK,MAAL,CAAY,UAAZ,CAA3B,EAAoD,WAAW,IAA/D,EAAX;AACA,WAAO,KAAP;AACH","file":"lines.js","sourcesContent":["/* @flow */\n\nconst lineBreakRegex = /\\r\\n|\\r|\\n/;\nconst lineBreakRegexGlobal = /\\r\\n|\\r|\\n/g;\n\nexport function getLines(input: string): string[] {\n    return input.split(lineBreakRegex);\n}\n\nexport function getLineInfo(code) {\n    var lines = [];\n    lineBreakRegexGlobal.lastIndex = 0;\n    var lastOffset = 0;\n    var match;\n    while ((match = lineBreakRegexGlobal.exec(code)) !== null) {\n        lines.push({\n            offset: lastOffset,\n            text: code.substring(lastOffset, match.index),\n            lineBreak: match[0]\n        });\n        lastOffset = match.index + match[0].length;\n    }\n    lines.push({offset: lastOffset, text: code.substr(lastOffset), lineBreak: null});\n    return lines;\n}\n"]}