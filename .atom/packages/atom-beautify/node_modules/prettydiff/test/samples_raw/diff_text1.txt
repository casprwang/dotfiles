use this lib for text or string compare.

add :: Int -> Int -> Int -- Unique lines
add = (+) -- Unique lines

sum2 :: Int -> Int
sum2 = add 2

mult2 :: Int -> Int
mult2 = (*) 2

mult2sum2 :: Int -> Int
mult2sum2 = sum2 . mult2

doSomething :: Int -> Int -- Unique lines
doSomething a = (mult2sum2 a) * a
IF RNGZ2 < 0
R-P86-ALT  := HIST
/TYPE    $FTOS.LMSLIBD.V61(FTPC.FTOS)
/TYPE    $FTOS.LMSLIBD.V61
MOVE 'D1' TO RZUGUP
MOVE 0 TO Z-ANZ-VAR /* ZÃ¤hler-Variable auf 0 setzen
if (build[i].charAt(0) !== " " && ((cinfo[i - 1] === "comment" && cinfo[i - 2] === "start"))) {
if (asdf) {return false;}
method="";



use this particular lib for text or string compare.

add :: Int -> Int -> Int -- Unique lines
add = (+) -- Unique lines

by2 :: (Int -> Int -> Int) -> Int -> Int
by2 a = a 2

by4 :: (Int -> Int -> Int) -> Int -> Int
by4 a = a 4

mult4sum2 :: Int -> Int
mult4sum2 = by2 add . by4 (*)

doSomething :: Int -> Int -- Unique lines
doSomething a = (mult4sum2 a) * a
IF P672-NGZ2 < 0
R-P114-ALT := HIST
/CALL    $FTOS.LMSLIBD.V61(FTPC.FTOS)
/CALL    $FTOS.LMSLIBD.V61
MOVE 'D1' TO P672SCHA
MOVE 0 TO ANZ-VAR   /* ZÃ¤hler-Variable auf 0 setzen
if (build[i].charAt(0) !== " " && ((cinfo[i - 1] === "comment" && (cinfo[i - 2] === "start" || (level[i - 1] === "x" && level[i - 2] === "x"))))) {
if (asdf) {return true;}
method="auto";
