{"version":3,"file":"formatter.js","sourceRoot":"","sources":["formatter.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;AAEb,IAAY,EAAE,WAAM,YAAY,CAAC,CAAA;AACjC,sBAA6C,SAAS,CAAC,CAAA;AAMvD,gBAA+B,QAAgB,EAAE,IAAY,EAAE,OAA0C;IACrG,YAAY,CAAC;IAD8C,uBAA0C,GAA1C,UAAU,sCAA8B,EAAE;IAIrG,IAAI,UAAU,GAAG,EAAE,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,EAAE,EAAE,CAAC,YAAY,CAAC,MAAM,EAAkD,GAAI,CAAC,CAAC;IACnI,qBAAqB,CAAC,UAAU,CAAC,CAAC;IAGlC,IAAI,KAAK,GAAS,EAAG,CAAC,UAAU,CAAC,cAAc,CAAC,UAAU,EAAE,eAAe,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,CAAC;IAG/F,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAE/B,yBAAyB,OAA6B;QAGlD,IAAI,YAAY,GAAG,IAAU,EAAG,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC;QAC5D,YAAY,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QACrC,MAAM,CAAC,YAAY,CAAC;IACxB,CAAC;IAED,oBAAoB,IAAY,EAAE,KAAsB;QAEpD,IAAI,MAAM,GAAG,IAAI,CAAC;QAClB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;YACzC,IAAI,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACtB,IAAI,IAAI,SAAQ,CAAC;YACjB,EAAE,CAAC,CAAC,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;gBACxC,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC9C,CAAC;YAAC,IAAI,CAAC,CAAC;gBAEJ,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAQ,MAAM,CAAC,IAAI,CAAC,KAAM,EAAE,CAAC,CAAC;YACvD,CAAC;YACD,IAAI,IAAI,SAAQ,CAAC;YACjB,EAAE,CAAC,CAAC,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;gBACxC,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAChE,CAAC;YAAC,IAAI,CAAC,CAAC;gBAEJ,IAAI,GAAG,MAAM,CAAC,KAAK,CAAO,MAAM,CAAC,IAAI,CAAC,KAAM,EAAE,GAAS,MAAM,CAAC,IAAI,CAAC,MAAO,EAAE,CAAC,CAAC;YAClF,CAAC;YACD,MAAM,GAAG,IAAI,GAAG,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;QAC1C,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;AACL,CAAC;AA5CD;wBA4CC,CAAA;AAED,+BAA+B,UAAyB;IACpD,YAAY,CAAC;IAEb,IAAI,MAAM,GAAY,UAAU,CAAC;IAEjC,cAAc,CAAU;QACpB,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC;QAElB,IAAI,UAAU,GAAG,MAAM,CAAC;QACxB,MAAM,GAAG,CAAC,CAAC;QACX,EAAE,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;QACzB,MAAM,GAAG,UAAU,CAAC;IACxB,CAAC;IAED,EAAE,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;AACtC,CAAC","sourcesContent":["\"use strict\";\n\nimport * as ts from \"typescript\";\nimport {createDefaultFormatCodeOptions} from \"./utils\";\n\n// from https://github.com/Microsoft/TypeScript/wiki/Using-the-Compiler-API#pretty-printer-using-the-ls-formatter\n\n// Note: this uses ts.formatting which is part of the typescript 1.4 package but is not currently\n//       exposed in the public typescript.d.ts. The typings should be exposed in the next release.\nexport default function format(fileName: string, text: string, options = createDefaultFormatCodeOptions()) {\n    \"use strict\";\n\n    // Parse the source text\n    let sourceFile = ts.createSourceFile(fileName, text, ts.ScriptTarget.Latest, (<any>/* backward compat for typescript-1.4.1 */\"0\"));\n    fixupParentReferences(sourceFile);\n\n    // Get the formatting edits on the input sources\n    let edits = (<any>ts).formatting.formatDocument(sourceFile, getRuleProvider(options), options);\n\n    // Apply the edits on the input code\n    return applyEdits(text, edits);\n\n    function getRuleProvider(options: ts.FormatCodeOptions) {\n        // Share this between multiple formatters using the same options.\n        // This represents the bulk of the space the formatter uses.\n        let ruleProvider = new (<any>ts).formatting.RulesProvider();\n        ruleProvider.ensureUpToDate(options);\n        return ruleProvider;\n    }\n\n    function applyEdits(text: string, edits: ts.TextChange[]): string {\n        // Apply edits in reverse on the existing text\n        let result = text;\n        for (let i = edits.length - 1; i >= 0; i--) {\n            let change = edits[i];\n            let head: string;\n            if (typeof change.span.start === \"number\") {\n                head = result.slice(0, change.span.start);\n            } else {\n                // backward compat for typescript-1.4.1\n                head = result.slice(0, (<any>change.span.start)());\n            }\n            let tail: string;\n            if (typeof change.span.start === \"number\") {\n                tail = result.slice(change.span.start + change.span.length);\n            } else {\n                // backward compat for typescript-1.4.1\n                tail = result.slice((<any>change.span.start)() + (<any>change.span.length)());\n            }\n            result = head + change.newText + tail;\n        }\n        return result;\n    }\n}\n\nfunction fixupParentReferences(sourceFile: ts.SourceFile) {\n    \"use strict\";\n\n    let parent: ts.Node = sourceFile;\n\n    function walk(n: ts.Node): void {\n        n.parent = parent;\n\n        let saveParent = parent;\n        parent = n;\n        ts.forEachChild(n, walk);\n        parent = saveParent;\n    }\n\n    ts.forEachChild(sourceFile, walk);\n}\n"]}