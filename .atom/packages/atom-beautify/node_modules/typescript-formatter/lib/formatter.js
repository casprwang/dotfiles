"use strict";
var ts = require("typescript");
var utils_1 = require("./utils");
function format(fileName, text, options) {
    "use strict";
    if (options === void 0) { options = utils_1.createDefaultFormatCodeOptions(); }
    var sourceFile = ts.createSourceFile(fileName, text, ts.ScriptTarget.Latest, "0");
    fixupParentReferences(sourceFile);
    var edits = ts.formatting.formatDocument(sourceFile, getRuleProvider(options), options);
    return applyEdits(text, edits);
    function getRuleProvider(options) {
        var ruleProvider = new ts.formatting.RulesProvider();
        ruleProvider.ensureUpToDate(options);
        return ruleProvider;
    }
    function applyEdits(text, edits) {
        var result = text;
        for (var i = edits.length - 1; i >= 0; i--) {
            var change = edits[i];
            var head = void 0;
            if (typeof change.span.start === "number") {
                head = result.slice(0, change.span.start);
            }
            else {
                head = result.slice(0, change.span.start());
            }
            var tail = void 0;
            if (typeof change.span.start === "number") {
                tail = result.slice(change.span.start + change.span.length);
            }
            else {
                tail = result.slice(change.span.start() + change.span.length());
            }
            result = head + change.newText + tail;
        }
        return result;
    }
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = format;
function fixupParentReferences(sourceFile) {
    "use strict";
    var parent = sourceFile;
    function walk(n) {
        n.parent = parent;
        var saveParent = parent;
        parent = n;
        ts.forEachChild(n, walk);
        parent = saveParent;
    }
    ts.forEachChild(sourceFile, walk);
}
//# sourceMappingURL=formatter.js.map