# Your keymap
# 'atom-text-editor:not([mini])':
# #                 unsetting

'.workspace .editor:not(.mini), .workspace':
  # 'tab': 'unset!'
  'cmd-\.': 'linter:next-error'
  'up': 'core:move-up'
  'down': 'core:move-down'

  'cmd-j': 'core:save'
  'cmd-b': 'tree-view:toggle-focus'
  'cmd-s': 'unset!'
  'cmd-y': 'Project Manager: List Projects'
  'cmd-r': 'run:file'
  # 'cmd-Y': 'Project Manager: List Projects'
'atom-workspace:not([mini])':
  # This key override window:toggle-full-screen(I'm not using it).
  'ctrl-cmd-f': 'project-find-navigation:activate-results-pane'
  # 'ctrl-shift-t': 'run:selection'
  # 'tab': 'unset!'
  # 'enter': 'vim-mode-plus:add-blank-line-below'
  # 'shift-enter': 'vim-mode-plus:add-blank-line-above'
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#

# 'atom-text-editor.vim-mode-plus:not(.insert-mode)':
#   'J': 'vim-mode-plus-user:move-down'
#   'K': 'vim-mode-plus-user:move-up'

# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
'atom-workspace':
  'ctrl-i':     'cursor-history:next'
  'ctrl-o':     'cursor-history:prev'
  'ctrl-cmd-i': 'cursor-history:next-within-editor'
  'ctrl-cmd-o': 'cursor-history:prev-within-editor'

'atom-text-editor.vim-mode-plus.insert-mode':
  'escape': 'vim-mode-plus:reset-normal-mode'
  'ctrl-w': 'editor:delete-to-beginning-of-word'
  'ctrl-q': 'emmet:expand-abbreviation-with-tab'
  'ctrl-u': 'editor:delete-to-beginning-of-line'
  # 'down': 'core:move-down'
  # 'up': 'core:move-up'


# 'atom-text-editor.vim-mode-plus:not(.insert-mode)':
#   'K': 'custom:move-ten-up'
#   'J': 'custom:move-ten-down'
# 'atom-workspace:not([mini])':
#   'cmd-x': 'paner:swap-pane'
#   'cmd-X': 'paner:send-item'
#   'cmd-K': 'paner:very-top'
#   'cmd-J': 'paner:very-bottom'
#   'cmd-H': 'paner:very-left'
#   'cmd-L': 'paner:very-right'

'atom-text-editor.vim-mode-plus.normal-mode':
  # Override default cmd-L(editor:split-selections-into-lines)
  'cmd-L': 'paner:very-right'
  ':': 'command-palette:toggle'
  'enter': 'vim-mode-plus:add-blank-line-below'
  # surround
  'g s': 'vim-mode-plus:surround'
  'c s': 'vim-mode-plus:change-surround-any-pair'
  'd s': 'vim-mode-plus:delete-surround-any-pair'

  'shift-enter': 'vim-mode-plus:add-blank-line-above'
  'tab': 'vim-mode-plus:reset-normal-mode'
  'shift-tab': 'vim-mode-plus:reset-normal-mode'

  'Z Z': 'core:close'
  'space j': 'core:save'
  'up': 'markdown-writer:jump-to-previous-heading'
  'down': 'markdown-writer:jump-to-next-heading'
'atom-text-editor.vim-mode-plus.visual-mode':
  'S': 'vim-mode-plus:surround'

# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
  # 'enter': 'editor:newline'
'atom-text-editor.vim-mode-plus.operator-pending-mode.toggle-line-comments-pending':
  '/': 'vim-mode-plus:toggle-line-comments'

#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
# 'atom-text-editor:not([mini])':

# 'atom-text-editor[data-grammar="YOUR GRAMMAR HERE"]:not([mini])':
'body':
  'ctrl-tab': 'unset!'
  'cmd-s': 'unset!'
  'ctrl-shift-tab': 'unset!'
  'ctrl-tab ^ctrl': 'unset!'
  'ctrl-shift-tab ^ctrl': 'unset!'
#  'ctrl-tab': 'pane:show-next-item'
 # 'ctrl-shift-tab': 'pane:show-previous-item'

#####################
'.workspace':
  'cmd-ctrl-o': 'open-on-github:repository'
  'ctrl-a': 'editor:move-to-first-character-of-line'
  'cmd-N': 'application:new-window'
  'ctrl-p': 'fuzzy-finder:toggle-file-finder'
  # 'cmd-j': 'platformio-ide-terminal:toggle'
  'cmd-t': 'symbols-view:toggle-file-symbols'

  'cmd-i': 'dash:shortcut'
  'shift-cmd-T': 'pane:reopen-closed-item'
  # 'cmd-h': 'pane:show-previous-item'
  'cmd-o': 'advanced-open-file:toggle'
  # 'cmd-l': 'pane:show-next-item'
  'cmd-L': 'console-log:add'
  'cmd-shift-v': 'atom-html-preview:toggle'
  'cmd-\\': 'tree-view:toggle'



#####script
  'alt-N': 'script:run'
  'cmd-M': 'script:close-view'


####pane

  # 'alt-cmd-j': 'pane:split-down-and-copy-active-item'
  # 'alt-cmd-k': 'pane:split-up-and-copy-active-item'
  # 'alt-cmd-l': 'pane:split-right-and-copy-active-item'
  # 'alt-cmd-h': 'pane:split-left-and-copy-active-item'
  # 'alt-l': 'window:focus-pane-on-right'
  # 'alt-j': 'window:focus-pane-below'
  # 'alt-k': 'window:focus-pane-above'
  # 'alt-h': 'window:focus-pane-on-left'

  'alt-=': 'pane:increase-size'
  'alt--': 'pane:decrease-size'
#  'alt-tab': 'window:focus-next-pane'
  # 'alt-shift-tab': 'pane:show-previous-item'
  # 'alt-cmd-l': 'window:focus-pane-on-right'
  # 'cmd-h': 'core:move-left'
  # 'cmd-l': 'core:move-right'
  # 'alt-j': 'core:move-down'
  # 'ctrl-h': 'core:move-left'
  # 'ctrl-l': 'core:move-right'
  # 'alt-h': 'editor:move-to-beginning-of-word'
  # 'alt-k': 'core:move-up'
  # 'alt-l': 'editor:move-to-end-of-word'
  # 'ctrl-j': 'core:move-down'
  # 'ctrl-k': 'core:move-up'


  'ctrl-shift-tab': 'pane:show-previous-item'
  'ctrl-tab': 'pane:show-next-item'


  # 'ctrl-w': 'editor:select-word'


  # 'cmd-`': 'tree-view:toggle'





  # 'cmd-.': 'ask-stack:ask-question'


  'cmd-p' :'git-plus:add-all-commit-and-push'


#   'ctrl-`': 'open-terminal-here:open'


  # 'alt-enter': 'core:move-down'
  # 'alt-shift-enter': 'core:move-up'
  # 'cmd-shift-h': 'editor:select-to-first-character-of-line'
  # 'cmd-shift-l': 'editor:select-to-end-of-line'
  # 'alt-shift-h': 'editor:select-to-beginning-of-word'
  # 'alt-shift-l': 'editor:select-to-end-of-word'
  # 'cmd-j': 'editor:select-line'
  # 'ctrl-o': 'tree-view:toggle-focus'
  # 'ctrl-shift-h': 'editor:select-to-first-character-of-line'
  # 'ctrl-shift-l': 'editor:select-to-end-of-line'
  # 'ctrl-a': 'editor:move-to-end-of-line'
  # 'ctrl-i': 'editor:move-to-first-character-of-line'
  # 'cmd-j': 'core:select-down'
  # 'cmd-k': 'core:select-up'
  'ctrl-e': 'editor:move-to-end-of-line'
  #



  # 'alt-tab': 'pane:show-next-item'
  # 'alt-shift-tab': 'pane:show-previous-item'
  # 'cmd-k': 'editor:select-line'
  # 'cmd-j': 'editor:select-word'

##############################
'.workspace .editor:not(.mini)':
  # 'cmd-h': 'pane:show-previous-item'
  # 'cmd-j': ''
  # 'ctrl-w': 'editor:select-word'
  'cmd-o': 'advanced-open-file:toggle'
  'cmd-p' :'git-plus:add-all-commit-and-push'

  # 'alt-cmd-j': 'pane:split-down-and-copy-active-item'
  # 'alt-cmd-k': 'pane:split-up-and-copy-active-item'
  # 'alt-cmd-l': 'pane:split-right-and-copy-active-item'
  # 'alt-cmd-h': 'pane:split-left-and-copy-active-item'
  # 'alt-l': 'window:focus-pane-on-right'
  # 'alt-j': 'window:focus-pane-below'
  # 'alt-k': 'window:focus-pane-above'
  # 'alt-h': 'window:focus-pane-on-left'
  'ctrl-a': 'editor:move-to-first-character-of-line'
  #'alt-tab': 'pane:show-next-item'
  'alt-shift-tab': 'pane:show-previous-item'

  #'cmd-N': 'script:run'
  'cmd-M': 'script:close-view'
  # 'cmd-.': 'ask-stack:ask-question'

  'alt-tab': 'window:focus-next-pane'

  # 'cmd-l': 'pane:show-next-item'
  # 'cmd-h': 'core:move-left'
  # 'cmd-l': 'core:move-right'
  # 'alt-h': 'editor:move-to-beginning-of-word'
  # 'alt-l': 'editor:move-to-end-of-word'
  # 'alt-j': 'core:move-down'
  # 'alt-k': 'core:move-up'
  # 'cmd-j': 'core:move-down'
  # 'cmd-k': 'core:move-up'
  'ctrl-k': 'core:move-up'
  # 'alt-shift-h': 'editor:select-to-beginning-of-word'
  # 'alt-shift-l': 'editor:select-to-end-of-word'
  # 'cmd-shift-h': 'editor:select-to-first-character-of-line'
  # 'cmd-shift-l': 'editor:select-to-end-of-line'
  'ctrl-h': 'core:move-left'
  'ctrl-l': 'core:move-right'
  # 'alt-enter': 'core:move-down'
  # 'alt-shift-enter': 'core:move-up'
  # 'ctrl-shift-j': 'corke:select-down'
  # 'ctrl-shift-k': 'core:select-up'

  # 'ctrl-shift-h': 'core:select-left'
  # 'ctrl-shift-l': 'core:select-right'
  # 'ctrl-cmd-h': 'core:backspace'



  # 'cmd-k': 'editor:select-line'
  # 'cmd-j': 'editor:select-word'

  # 'ctrl-shift-h': 'editor:select-to-first-character-of-line'
  # 'ctrl-shift-l': 'editor:select-to-end-of-line'

  # 'ctrl-a': 'editor:move-to-end-of-line'
  # 'ctrl-i': 'editor:move-to-first-character-of-line'


  'ctrl-e': 'editor:move-to-end-of-line'

 # 'ctrl-j': 'editor:select-line'
#  'ctrl-j'
 # 'ctrl-h'
 # 'ctrl-l'
 # 'ctrl-alt-h'
#  'ctrl-alt-l'
 # 'ctrl-shift-h'
 # 'ctrl-shift-l'
#  'alt-h'
#  'alt-l'
#'body'
#  'cmd-j': 'move-down'



  'cmd-L': 'console-log:add'

  'ctrl-shift-tab': 'pane:show-previous-item'
  'ctrl-tab': 'pane:show-next-item'
#   'ctrl-`': 'open-terminal-here:open'
  'cmd-ctrl-o': 'open-on-github:repository'
  'cmd-N': 'application:new-window'
  'cmd-i': 'dash:shortcut'
  'cmd-shift-v': 'atom-html-preview:toggle'
  'ctrl-p': 'fuzzy-finder:toggle-file-finder'


  'shift-cmd-T': 'pane:reopen-closed-item'

  # 'cmd-j': 'platformio-ide-terminal:toggle'

  'cmd-t': 'symbols-view:toggle-file-symbols'

#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# If you're having trouble with your keybindings not working, try the
# Keybinding Resolver: `Cmd+.` on OS X and `Ctrl+.` on other platforms. See the
# Debugging Guide for more information:
# * https://atom.io/docs/latest/hacking-atom-debugging#check-the-keybindings
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson
'atom-text-editor.vim-mode-plus:not(.insert-mode)':
  'J': 'vim-mode-plus-user:move-five-lines-down'
  'K': 'vim-mode-plus-user:move-five-lines-up'
  'left': 'window:focus-pane-on-left'
  'tab': 'snippets:next-tab-stop'
  'right': 'window:focus-pane-on-right'
  'ctrl-w j': 'pane:split-down-and-copy-active-item'
  'ctrl-w l': 'pane:split-right-and-copy-active-item'


####### for markdown file
".workspace .editor:not(.mini), .workspace[data-grammar='source md']":
  'cmd-t': 'markdown-writer:toggle-task'
  'cmd-u': 'toggle-markdown-task:toggle'
  # 'cmd-y': 'markdown-writer:toggle-taskdone'
  # "cmd-k k": "markdown-writer:insert-link"
  # "shift-cmd-I": "markdown-writer:insert-image"
  # "cmd-i":       "markdown-writer:toggle-italic-text"
  "cmd-b":       "markdown-writer:toggle-bold-text"
  "cmd-'":       "markdown-writer:toggle-code-text"
  # "cmd-k":       "markdown-writer:toggle-keystroke-text"
  # "cmd-h":       "markdown-writer:toggle-strikethrough-text"
  # 'cmd->':       "markdown-writer:toggle-blockquote"
  # 'cmd-"':       "markdown-writer:toggle-codeblock-text"
  "cmd-1":  "markdown-writer:toggle-h1"
  "cmd-2":  "markdown-writer:toggle-h2"
  "cmd-3":  "markdown-writer:toggle-h3"
  "cmd-4":  "markdown-writer:toggle-h4"
  "cmd-5":  "markdown-writer:toggle-h5"
  # "shift-cmd-O": "markdown-writer:toggle-ol"
  "cmd-l": "markdown-writer:toggle-ul"
  # "cmd-j cmd-d": "markdown-writer:jump-to-reference-definition"
  # "cmd-j cmd-t": "markdown-writer:jump-to-next-table-cell"






# '.pane .editor:not(.mini)':
#   'tab': 'snippets:expand'
# # Stop emmet from hijacking tab from snippets and autocomplete
#
# 'atom-text-editor[data-grammar="text html basic"]:not([mini]), atom-text-editor[data-grammar~="jade"]:not([mini]), atom-text-editor[data-grammar~="css"]:not([mini]), atom-text-editor[data-grammar~="sass"]:not([mini])':
#   'tab': 'snippets:next-tab-stop'
# # Stop emmet from hijacking tab from snippets and autocomplete
# 'atom-text-editor.autocomplete-active:not([mini])':
#   'tab': 'autocomplete-plus:confirm'
'atom-text-editor:not([mini])':
  'cmd-shift-e': 'emmet:expand-abbreviation-with-tab'

'atom-workspace atom-text-editor.autocomplete-active':
  'tab': 'snippets:next-tab-stop'
  'shift-tab': 'snippets:previous-tab-stop'
  'up': 'autocomplete-plus:move-up'
  'down': 'autocomplete-plus:move-down'
'atom-text-editor.autocomplete-active':
  'escape': 'autocomplete-plus:cancel'
